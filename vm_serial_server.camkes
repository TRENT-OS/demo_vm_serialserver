/*
 * Copyright 2017, Data61, CSIRO (ABN 41 687 119 230)
 *
 * SPDX-License-Identifier: BSD-2-Clause
 */


import <std_connector.camkes>;
import <global-connectors.camkes>;


/*
 * can't import VM.camkes, because it adds dependencies on components instead of
 * just the interfaces
 *
 */
import <vm-connectors.camkes>;
import <seL4VMDTBPassthrough.idl4>;
import <Batch.idl4>;
import <PutChar.idl4>;
import <GetChar.idl4>;
import <VirtQueues.idl4>;
import <FileServerInterface.camkes>;

#include <configurations/vm.h>
component VM {
    VM_INIT_DEF()
}


// Components
import <VirtQueue/VirtQueue.camkes>;
import <FileServer/FileServer.camkes>;


// Platform specific configurations
#include <plat.camkes>


assembly {

    composition {

        component TimeServer time_server;

        component SerialServer serial;

        connection seL4TimeServer serialserver_timer(
            from serial.timeout,
            to time_server.the_timer);


        component FileServer fileServer;

        //--------------------------------------------------------------
        // VM0
        //--------------------------------------------------------------
        component VM vm0;
        connection seL4VMDTBPassthrough vm0_dtb(
            from vm0.dtb_self,
            to   vm0.dtb
        );
        connection seL4GlobalAsynch vm0_notify_ready(
            from vm0.notification_ready_connector,
            to   vm0.notification_ready
        );

        connection seL4SerialServer serial_vm(
            from vm0.batch,
            to serial.processed_batch
        );

        connection seL4SerialServer serial_input(
            from vm0.serial_getchar,
            to serial.getchar
        );

        connection seL4RPCDataport vm0_fs(
            from vm0.fs,
            to   fileServer.fs_ctrl
        );

        //--------------------------------------------------------------
        // VM1
        //--------------------------------------------------------------
        component VM vm1;
        connection seL4VMDTBPassthrough vm0_dtb(
            from vm1.dtb_self,
            to   vm1.dtb
        );
        connection seL4GlobalAsynch vm0_notify_ready(
            from vm1.notification_ready_connector,
            to   vm1.notification_ready
        );

        connection seL4SerialServer serial_vm(
            from vm1.batch,
            to serial.processed_batch
        );

        connection seL4SerialServer serial_input(
            from vm1.serial_getchar,
            to serial.getchar
        );

        connection seL4RPCDataport vm0_fs(
            from vm1.fs,
            to   fileServer.fs_ctrl
        );

    }

    configuration {

        fileServer.heap_size = 0x200000; // 128 KiB seems enough

        // see also plat.camkes for more config values
        vm0.num_vcpus               = 1;
        vm0.base_prio               = 100;
        vm0._priority               = 101;

        vm0.num_extra_frame_caps    = 0;
        vm0.extra_frame_map_address = 0;
        vm0.cnode_size_bits         = 23;
        vm0.simple_untyped24_pool   = 12;
        vm0.asid_pool               = true;
        vm0.global_endpoint_base    = 1 << 27;
        vm0.simple                  = true;
        vm0.sem_value               = 0;
        vm0.heap_size               = 0x300000;
        vm0.fs_shmem_size           = 0x100000;

    }
}
